#ifndef _TIMER_H
#define _TIMER_H
#include "stm32f10x.h"
/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/

/***********************************************************************************************************************
 * Prototypes
 **********************************************************************************************************************/
typedef enum{
	COUNTER_UP,
	COUNTER_DOWN
} TIMER_CounterMode;
/***********************************************************************************************************************
 * Global Variables
 **********************************************************************************************************************/

/***********************************************************************************************************************
 * API
 **********************************************************************************************************************/
void TIMER_Init(TIM_TypeDef* TIM, TIMER_CounterMode Mode, uint32_t Counter);
void TIMER_Chaining(void);
void TIMER_SetCLockSourceMillis(TIM_TypeDef* Timer);
void TIMER_SetCLockSourceMicros(TIM_TypeDef* Timer);
void TIMER_EnableInterrupt(TIM_TypeDef* Timer);
uint32_t TIMER_Milis(void);
uint32_t TIMER_Micros(void);
#endif  /* _TIMER_H */